1. What’s your proudest achievement? It can be a personal project or something you’ve worked on professionally. Just a short paragraph is fine, but I’d love to know why you’re proud of it.

two incidents stand out:

In the first incident, 

A developer appreciated me on the defects raised in her name. She told me that you get into very small details, give complete details about how you found the defects. Though severity of the defects were low, the priority of the defects was high.

Most of the time there will be kind of animosity between developers and testers. After this incident atleast they used to give lot of respect and time to me to explain the defects raised, why it is a defect....

in the second incident,

My project manager appreciated that I give detailed explanations of the coding that I do in the file itself so it is easier to maintain. He also told me that my testing was like a customer who is using the software that is developed.

========================================================================================================================================
2. What's a personal project you're currently working on? This could be a coding side project, hobby, or otherwise real world project you're working on.
As of now I am learning how to do Search Engine Optiization - Yes it is totally different, I took this to switch off from what I was doing.

========================================================================================================================================

3. Tell us about a technical book or article you read recently, why you liked it, and why we should read it.

I have read again 'Testing Computer Software' by Cem Kaner, Hung Q Nguyen, and Jack Falk. Earlier I had read the book in 2013.

The book explains in simple terms testing software under the conditions in which the software will be used.

Any tester/developer needs to read this as it explains fundamentals of testing a software. 
PM or lead will come to know the best practises in testing so he/she can educate 

You will learn 
1. How to find important bugs quickly
2. How to describe software errors clearly
3. How to create a testing plan with a minimum of paperwork
4. How to design and use a bug-tracking system
5. Where testing fits in the product development process
6. How to test products that will be translated into other languages
7. How to test for compatibility with devices, such as printers
========================================================================================================================================

4. Tell us about one of your favorite products (physical or software) and one specific aspect that makes it truly great.

I am using Lenovo laptop (T440) for many years now (I have used many models from Lenovo for more than 10 years)

The laptop is good for programmers like me as it is
1. The build is sturdy, rugged, and light weight.
2. Battery lasts for a long time as it is good for Indian conditions.
3. Cheap to buy, upgrade and to maintain.